function registerComponent(t,n){if(!t||""===t||stampComponents.hasOwnProperty(t))throw"Stamp Error: A unique name is required for a Component definition";stampComponents[t]=n}function registerLayout(t,n){if(!t||""===t||stampLayouts.hasOwnProperty(t))throw"Stamp Error: A unique name is required for a Layout definition";stampLayouts[t]=n}function registerTemplate(t,n){throw new Error("NotImplementedException")}!function(t){try{t=angular.module("stamp")}catch(n){t=angular.module("stamp",[])}t.run(["$templateCache",function(t){t.put("src/angular/templates/block.html",'<div class="block-header clearfix"><p class="pull-right"><a href="#" data-ng-if="blockIndex !== 0">&#9650;</a><a href="#" data-ng-if="blockIndex !== blockCount - 1">&#9660;</a><a href="#">Layout</a> <a href="#">X</a></p></div>\n<div class="block-body" data-ng-class="getColumnClasses($index)" data-ng-repeat="column in data.columns track by $index">\n  <div class="stamp-component-wrapper component-{{$index}}" data-ng-repeat="component in column.components track by $index">\n     <stamp-component data="component" col-index="$parent.$index" com-index="$index" com-count="column.components.length"></stamp-component>\n  </div>\n  <div data-ng-if="!parent.locked && !parent.readOnly"><input class="btn btn-default btn-lg center-block" type="button" value="+ Component" data-ng-click="addComponent($parent.$index)"></div>\n</div>')}])}(),"function"!=typeof Object.assign&&(Object.assign=function(t){"use strict";if(null==t)throw new TypeError("Cannot convert undefined or null to object");t=Object(t);for(var n=1;n<arguments.length;n++){var e=arguments[n];if(null!=e)for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])}return t}),function(t){try{t=angular.module("stamp")}catch(n){t=angular.module("stamp",[])}t.run(["$templateCache",function(t){t.put("src/angular/templates/component.html",'<div class="component-wrap">\n  <div class="component-header">\n    <p><a href="#" data-ng-if="comIndex !== 0">&#9650;</a> <a href="#" data-ng-if="comIndex !== comCount - 1">&#9660;</a> <a href="#">X</a></p>\n  </div>\n  <div class="alert alert-danger" data-ng-if="error">{{error}}</div>\n  <div class="component-body">\n    <div data-ng-if="componentError">{{componentError}}</div>\n  </div>\n</div>')}])}(),function(){var t=angular.module("stamp.mappers",["stamp.models"]);t.factory("StampJSON",["StampModels",function(t){function n(t){try{return e.parse(t)}catch(n){return void console.log("Warning! Failed to import Stamp json",n)}}var e={parse:function(t){return e.stack(t)},stack:function o(n){var o=new t.Stack;return n&&n.blocks?(n.blocks.forEach(function(t){var n=e.block(t);n&&o.add(n)}),o):o},block:function a(n){var a=new t.Block(n);return n.components?(n.components.forEach(function(t){var n=e.component(t);n&&a.add(n)}),a):a},component:function(n){var e=new t.Component(n);return e}};return{from:function(t){return console.log("Called stamp.mappers.json.from [JSON -> Stack]"),n(t)}}}])}(),function(t){try{t=angular.module("stamp")}catch(n){t=angular.module("stamp",[])}t.run(["$templateCache",function(t){t.put("src/angular/templates/editor.html",'<div class="stamp-stack-container">\n <!-- {{json | json}} -->\n  <div class="stamp-block-wrapper block-{{$index}} row" data-ng-repeat="block in json.blocks">\n    <stamp-block data="block" block-index="$index" block-count="json.blocks.length" class="clearfix"></stamp-block>\n  </div>\n  <div class="no-config" data-ng-if="!json.blocks || json.blocks.length == 0">No Blocks</div>\n  <div data-ng-if="!locked && !readOnly"><input class="btn btn-default btn-lg center-block" type="button" value="+ Block" data-ng-click="addBlock()"></div>\n</div>')}])}(),function(){function t(t){return t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}var n=angular.module("stamp",["stampSetup","ui.bootstrap"]);n.value("stampConfig",{}),n.directive("stampEditor",["$rootScope","$compile","$timeout","$window","stampConfig",function(t,n,e,o,a){a=a||{};var l=0,r="ui-stamp-editor-";return{require:"ngModel",templateUrl:"../src/angular/templates/editor.html",link:function(t,n,e,o){function s(){t.locked=e.locked}function c(){t.readOnly=e.readOnly}var i={},u={};t.json={},e.$set("id",r+l++),console.log("Stamp directive given ID: "+r+l),angular.extend(u,t.$eval(e.stampOptions)),angular.extend(i,a,u),t.attributes=Object.assign({locked:!1,readOnly:!1},{locked:!!e.locked,readOnly:!!e.readOnly},i),e.$observe("locked",s),e.$observe("readOnly",c),e.ngModel?(t.$watch(e.ngModel,function(t,n){console.log("ngModel value changed via attr watch",n,t)}),t.$watch(function(){return JSON.stringify(o.$viewValue)},function(t,n){console.log("ngModel value changed via view watch")}),o.$viewChangeListeners.push(function(){console.log("ngModel value changed via Listener")}),o.$render=function(){console.log("ng-model render called")},o.$parsers.push(function(t){console.log("ng-model parser called");var n=o.$viewValue;return n}),o.$formatters.push(function(t){console.log("ng-model formatter called");var n=o.$modelValue;return n}),t.$watch(function(){return JSON.stringify(o.$modelValue)},function(n,e){console.log("ngModel value changed via model watch"),t.json=o.$modelValue})):console.log("Warning: missing ng-model definition on stamp editor")},controller:["$scope",function(t){}]}}]),n.directive("stampBlock",["stampLayouts",function(t){return{restrict:"E",require:"^stampEditor",templateUrl:"../src/angular/templates/block.html",scope:{data:"=",blockIndex:"=",blockCount:"="},link:function(n,e,o,a){function l(e,o){return n.layout=t[o],n.error=!1,n.layout?void(void 0!==n.layout.maxColumns&&n.layout.maxColumns<n.data.columns.length&&(n.error="This layout has a column limit of "+n.layout.maxColumns+", the column count is "+n.data.columns.length)):void(n.error="Stamp markup requires missing layout: "+o)}n.$watch(function(){return n.data.attributes.layout},function(t,n){n!==t&&l(n,t)}),n.data.attributes=n.data.attributes||{},n.data.attributes.layout=n.data.attributes.layout||"fluid",l(void 0,n.data.attributes.layout),n.getColumnClasses=function(t){var e="stack-column column-"+t+" ";if(void 0===n.layout.columnStyles)e+="col-md-12";else if(angular.isObject(n.layout.columnStyles)){for(var o in n.layout.columnStyles)if(n.layout.columnStyles.hasOwnProperty(o)){var a=n.layout.columnStyles[o];if(angular.isArray(a)){var l=t>a.length-1?a.length-1:t;e+="col-"+o+"-"+a[l]}else e+="col-"+o+"-"+a;e+=" "}}else e+="col-"+n.layout.columnStyles;return e},n.addComponent=function(t){}},controller:["$scope",function(t){this.removeComponent=function(t,n){console.log("TODO")}}]}}]),n.directive("stampComponent",["$compile","stampComponents",function(n){return{restrict:"E",require:"^stampBlock",templateUrl:"../src/angular/templates/component.html",scope:{data:"=",index:"=",colIndex:"=",comIndex:"=",comCount:"="},link:function(e,o,a,l){if(!e.data||!e.data.type)return void(e.componentError="Missing required component data");var r=stampComponents[e.data.type];if(!r)return void(e.componentError="No component registered for type: "+e.data.type);var s=t(r.directive),c="<"+s+' data="data.data"></'+s+">",i=n(c)(e);o[0].getElementsByClassName("component-body")[0].appendChild(i[0]),e.remove=function(t,n){l.removeComponent(t,n)}}}}])}();var stampComponents={},stampLayouts={},stampTemplates={};angular.module("stampSetup",[]).constant("stampRegister",{component:registerComponent,layout:registerLayout,template:registerTemplate}).value("stampComponents",stampComponents).value("stampLayouts",stampLayouts).value("stampTemplates",stampTemplates).value("stampOptions",{}).value("stampTranslations",{}).run(["stampRegister","$window","stampTranslations","stampOptions",function(t,n,e,o){t.layout("fluid",{icon:"tint",label:"Fluid",maxColumns:void 0}),t.layout("oneColumn",{icon:"square",label:"One Column",maxColumns:1,columnStyles:{md:12}}),t.layout("twoColumn",{icon:"pause",label:"Two Even Columns",maxColumns:2,columnStyles:{md:6,sm:12}}),t.layout("threeColumn",{icon:"todo",label:"Three Columns",maxColumns:3,columnStyles:{md:4,sm:12}}),t.component("text",{directive:"stampTextComponent",icon:"text"}),t.component("title",{directive:"stampHeadingComponent",icon:"title"})}]).directive("stampTextComponent",["$compile",function(t){return{restrict:"E",template:'<textarea placeholder="Enter Text.." class="form-control" ng-model="data" rows="3"></textarea>',scope:{data:"="}}}]).directive("stampHeadingComponent",["$compile",function(t){return{restrict:"E",template:'<div class="input-group size-h{{data.size || 1}}">                <input type="text" placeholder="Enter Heading Text.." class="form-control" ng-model="data.value">                <div class="input-group-btn" uib-dropdown>                  <button type="button" class="btn btn-default" uib-dropdown-toggle>{{"H" + data.size}} <span class="caret"></span></button>                  <ul class="dropdown-menu" uib-dropdown-menu>                    <li ng-repeat="size in [1, 2, 3]"><a href="#" ng-click="data.size = size">{{"H" + size}}</a></li>                  </ul>                </div>              </div>',scope:{data:"="},link:function(t){}}}]);